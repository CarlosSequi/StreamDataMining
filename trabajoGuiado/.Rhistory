paste(c(paste(c("nb",1),collapse = ""),".csv"),collapse="")
a = read.csv("nb1.txt")
a = read.csv("nb1.csv")
head(a)
a$classifications.correct..percent.
a$classifications.correct..percent.[length(a$classifications.correct..percent.)]
a = cbind(1:3)
a
for (i in 2:30)
{
nombreFichero = paste(c(paste(c("nb",i),collapse = ""),".csv"),collapse="")
nuevoFichero = read.csv(nombreFichero)
nuevoDato = nuevoFichero$classifications.correct..percent.[length(nuevoFichero$classifications.correct..percent.)]
datosNaives = rbind(datosNaives,nuevoDato)
}
datosNaives
datosNaives = 0
for (i in 2:30)
{
nombreFichero = paste(c(paste(c("nb",i),collapse = ""),".csv"),collapse="")
nuevoFichero = read.csv(nombreFichero)
nuevoDato = nuevoFichero$classifications.correct..percent.[length(nuevoFichero$classifications.correct..percent.)]
datosNaives = rbind(datosNaives,nuevoDato)
}
datosNaives
datosNaives = 0
for (i in 1:30)
{
nombreFichero = paste(c(paste(c("nb",i),collapse = ""),".csv"),collapse="")
nuevoFichero = read.csv(nombreFichero)
nuevoDato = nuevoFichero$classifications.correct..percent.[length(nuevoFichero$classifications.correct..percent.)]
datosNaives = rbind(datosNaives,nuevoDato)
}
datosNaives
datosNaives = list()
datosNaives = list()
for (i in 1:30)
{
nombreFichero = paste(c(paste(c("nb",i),collapse = ""),".csv"),collapse="")
nuevoFichero = read.csv(nombreFichero)
nuevoDato = nuevoFichero$classifications.correct..percent.[length(nuevoFichero$classifications.correct..percent.)]
datosNaives.append(nuevoDato)
}
datosNaives = list()
for (i in 1:30)
{
nombreFichero = paste(c(paste(c("nb",i),collapse = ""),".csv"),collapse="")
nuevoFichero = read.csv(nombreFichero)
nuevoDato = nuevoFichero$classifications.correct..percent.[length(nuevoFichero$classifications.correct..percent.)]
append(datosNaives,nuevoDato)
}
datosNaives
datosNaives = list()
for (i in 1:30)
{
nombreFichero = paste(c(paste(c("nb",i),collapse = ""),".csv"),collapse="")
nuevoFichero = read.csv(nombreFichero)
nuevoDato = nuevoFichero$classifications.correct..percent.[length(nuevoFichero$classifications.correct..percent.)]
append(datosNaives,nuevoDato)
}
datosNaives = array()
for (i in 1:30)
{
nombreFichero = paste(c(paste(c("nb",i),collapse = ""),".csv"),collapse="")
nuevoFichero = read.csv(nombreFichero)
nuevoDato = nuevoFichero$classifications.correct..percent.[length(nuevoFichero$classifications.correct..percent.)]
append(datosNaives,nuevoDato)
}
datosNaives = array(dim = 1:30)
datosNaives = array(dim = 30)
for (i in 1:30)
{
nombreFichero = paste(c(paste(c("nb",i),collapse = ""),".csv"),collapse="")
nuevoFichero = read.csv(nombreFichero)
nuevoDato = nuevoFichero$classifications.correct..percent.[length(nuevoFichero$classifications.correct..percent.)]
append(datosNaives,nuevoDato)
}
datosNaives = array(dim = 30)
for (i in 1:30)
{
nombreFichero = paste(c(paste(c("nb",i),collapse = ""),".csv"),collapse="")
nuevoFichero = read.csv(nombreFichero)
nuevoDato = nuevoFichero$classifications.correct..percent.[length(nuevoFichero$classifications.correct..percent.)]
datosNaives[i] = nuevoDato
}
datosNaives
jarque.bera.test(datosNaives)
shapiro.test(datosNaives)
hist(datosNaives, col="blue", prob=T,ylim=c(0,6), xlim=c(-0.4,0.4))
lines(density(datosNaives))
hist(datosNaives, col="blue")
hist(datosNaives, col="blue")
lines(density(datosNaives))
hist(datosNaives, col="blue", prob=T,ylim=c(0,13), xlim=c(73,74))
lines(density(datosNaives))
hist(datosNaives, col="blue", prob=T,ylim=c(0,13), xlim=c(73.4,74))
hist(datosNaives, col="blue", prob=T,ylim=c(0,13), xlim=c(73.5,73.85))
hist(datosNaives, col="blue", prob=T,ylim=c(0,13), xlim=c(73.5,73.85))
lines(density(datosNaives))
datosNaives = array(dim = 30)
for (i in 1:30)
{
nombreFichero = paste(c(paste(c("nb",i),collapse = ""),".csv"),collapse="")
nuevoFichero = read.csv(nombreFichero)
nuevoDato = nuevoFichero$classifications.correct..percent.[length(nuevoFichero$classifications.correct..percent.)]
datosNaives[i] = nuevoDato
}
datosHoeffding = array(dim = 30)
for (i in 1:30)
{
nombreFichero = paste(c(paste(c("HF",i),collapse = ""),".csv"),collapse="")
nuevoFichero = read.csv(nombreFichero)
nuevoDato = nuevoFichero$classifications.correct..percent.[length(nuevoFichero$classifications.correct..percent.)]
datosHoeffding[i] = nuevoDato
}
jarque.bera.test(datosNaives)
datosNaives = array(dim = 30)
for (i in 1:30)
{
nombreFichero = paste(c(paste(c("nb",i),collapse = ""),".csv"),collapse="")
nuevoFichero = read.csv(nombreFichero)
nuevoDato = nuevoFichero$classifications.correct..percent.[length(nuevoFichero$classifications.correct..percent.)]
datosNaives[i] = nuevoDato
}
datosHoeffding = array(dim = 30)
for (i in 1:30)
{
nombreFichero = paste(c(paste(c("HF",i),collapse = ""),".csv"),collapse="")
nuevoFichero = read.csv(nombreFichero)
nuevoDato = nuevoFichero$classifications.correct..percent.[length(nuevoFichero$classifications.correct..percent.)]
datosHoeffding[i] = nuevoDato
}
shapiro.test(datosNaives)
hist(datosNaives, col="blue", prob=T,ylim=c(0,13), xlim=c(73.5,73.85))
lines(density(datosNaives))
jarque.bera.test(datosHoeffding)
datosNaives = array(dim = 30)
for (i in 1:30)
{
nombreFichero = paste(c(paste(c("nb",i),collapse = ""),".csv"),collapse="")
nuevoFichero = read.csv(nombreFichero)
nuevoDato = nuevoFichero$classifications.correct..percent.[length(nuevoFichero$classifications.correct..percent.)]
datosNaives[i] = nuevoDato
}
datosHoeffding = array(dim = 30)
for (i in 1:30)
{
nombreFichero = paste(c(paste(c("HF",i),collapse = ""),".csv"),collapse="")
nuevoFichero = read.csv(nombreFichero)
nuevoDato = nuevoFichero$classifications.correct..percent.[length(nuevoFichero$classifications.correct..percent.)]
datosHoeffding[i] = nuevoDato
}
shapiro.test(datosNaives)
hist(datosNaives, col="blue", prob=T,ylim=c(0,13), xlim=c(73.5,73.85))
lines(density(datosNaives))
shapiro.test(datosHoeffding)
hist(datosHoeffding, col="blue", prob=T,ylim=c(0,13), xlim=c(73.5,73.85))
lines(density(datosHoeffding))
datosNaives = array(dim = 30)
for (i in 1:30)
{
nombreFichero = paste(c(paste(c("nb",i),collapse = ""),".csv"),collapse="")
nuevoFichero = read.csv(nombreFichero)
nuevoDato = nuevoFichero$classifications.correct..percent.[length(nuevoFichero$classifications.correct..percent.)]
datosNaives[i] = nuevoDato
}
datosHoeffding = array(dim = 30)
for (i in 1:30)
{
nombreFichero = paste(c(paste(c("HF",i),collapse = ""),".csv"),collapse="")
nuevoFichero = read.csv(nombreFichero)
nuevoDato = nuevoFichero$classifications.correct..percent.[length(nuevoFichero$classifications.correct..percent.)]
datosHoeffding[i] = nuevoDato
}
shapiro.test(datosNaives)
hist(datosNaives, col="blue", prob=T,ylim=c(0,13), xlim=c(73.5,73.85))
lines(density(datosNaives))
shapiro.test(datosHoeffding)
hist(datosHoeffding, col="blue")
lines(density(datosHoeffding))
t.test(datosNaives,datosHoeffding)
conceptDrift1 = read.csv("./datosConceptDroft/conceptDrift1.csv")
conceptDrift1 = read.csv("./datosConceptDroft/conceptDrift1.csv")
conceptDrift1 = read.csv("./datosConceptDrift/conceptDrift1.csv")
# Mostrar el acierto del clasificador en el tiempo
plot(conceptDrift1$learning.evaluation.instances, conceptDrift1$classifications.correct..percent., "l", ylim = c(0,100), col = "red")
# Mostrar el último valor de accuracy y kappa junto a los valores medios
conceptDrift1$classifications.correct..percent.[length(conceptDrift1$classifications.correct..percent.)]
mean(conceptDrift1$classifications.correct..percent.)
conceptDrift1$Kappa.Statistic..percent.[length(conceptDrift1$Kappa.Statistic..percent.)]
mean(conceptDrift1$Kappa.Statistic..percent.)
conceptDrift1 = read.csv("./datosConceptDrift/conceptDrift1.csv")
# Mostrar el acierto del clasificador en el tiempo
plot(conceptDrift1$learning.evaluation.instances, conceptDrift1$classifications.correct..percent., "l", ylim = c(0,100), col = "red")
# Mostrar el último valor de accuracy y kappa junto a los valores medios
conceptDrift1$classifications.correct..percent.[length(conceptDrift1$classifications.correct..percent.)]
mean(conceptDrift1$classifications.correct..percent.)
conceptDrift1$Kappa.Statistic..percent.[length(conceptDrift1$Kappa.Statistic..percent.)]
mean(conceptDrift1$Kappa.Statistic..percent.)
conceptDrift3 = read.csv("./datosConceptDrift/conceptDrift2.csv")
# Mostrar el último valor de accuracy y kappa junto a los valores medios
conceptDrift3$classifications.correct..percent.[length(conceptDrift3$classifications.correct..percent.)]
mean(conceptDrift3$classifications.correct..percent.)
conceptDrift3$Kappa.Statistic..percent.[length(conceptDrift3$Kappa.Statistic..percent.)]
mean(conceptDrift3$Kappa.Statistic..percent.)
datosNaives = array(dim = 30)
for (i in 1:30)
{
nombreFichero = paste(c(paste(c("./datosNaiveBayes/nb",i),collapse = ""),".csv"),collapse="")
nuevoFichero = read.csv(nombreFichero)
nuevoDato = nuevoFichero$classifications.correct..percent.[length(nuevoFichero$classifications.correct..percent.)]
datosNaives[i] = nuevoDato
}
datosHoeffding = array(dim = 30)
for (i in 1:30)
{
nombreFichero = paste(c(paste(c("./datosHoeffdingTrees/HF",i),collapse = ""),".csv"),collapse="")
nuevoFichero = read.csv(nombreFichero)
nuevoDato = nuevoFichero$classifications.correct..percent.[length(nuevoFichero$classifications.correct..percent.)]
datosHoeffding[i] = nuevoDato
}
shapiro.test(datosNaives)
hist(datosNaives, col="blue", prob=T,ylim=c(0,13), xlim=c(73.5,73.85))
lines(density(datosNaives))
shapiro.test(datosHoeffding)
hist(datosHoeffding, col="blue")
lines(density(datosHoeffding))
t.test(datosNaives,datosHoeffding)
conceptDrift1 = read.csv("./datosConceptDrift/conceptDrift1.csv")
# Mostrar el acierto del clasificador en el tiempo
plot(conceptDrift1$learning.evaluation.instances, conceptDrift1$classifications.correct..percent., "l", ylim = c(0,100), col = "red")
# mostramos los últimos valores de accuracy y de kappa
# junto con los valores medios.
# accuracy
conceptDrift1$classifications.correct..percent.[length(conceptDrift1$classifications.correct..percent.)]
# accuracy mean
mean(conceptDrift1$classifications.correct..percent.)
# kappa
conceptDrift1$Kappa.Statistic..percent.[length(conceptDrift1$Kappa.Statistic..percent.)]
# kappa mean
mean(conceptDrift1$Kappa.Statistic..percent.)
conceptDrift2 = read.csv("./datosConceptDrift/conceptDrift2.csv")
# mostramos los últimos valores de accuracy y de kappa
# junto con los valores medios.
# accuracy
conceptDrift2$classifications.correct..percent.[length(conceptDrift2$classifications.correct..percent.)]
# accuracy mean
mean(conceptDrift2$classifications.correct..percent.)
# kappa
conceptDrift2$Kappa.Statistic..percent.[length(conceptDrift2$Kappa.Statistic..percent.)]
# kappa mean
mean(conceptDrift2$Kappa.Statistic..percent.)
